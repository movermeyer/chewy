#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Update manifest file for chewy repository
#
#

import portage.output
import os
import re
import sys
import urllib.parse

# TODO This doesn't needed for installed package
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
import chewy
import chewy.meta

log = portage.output.EOutput()

_IGNORE_PATH = [
    re.compile('\\.(git|svn|hg)')
  , re.compile('README.md')
  , re.compile('manifest')
  ]
_X_CHEWY_REPOBASE = '# X-Chewy-' + chewy.meta.REPOBASE + ': '
_MANIFEST_FILENAME = 'manifest'
_MANIFEST_HEADER = '''#
# ATTENTION DO NOT EDIT! This file was generated by `update-manifest.py`!
#
'''


def getMetaInfo(filename):
    f = open(filename, 'rt')
    content = f.read()
    return chewy.Module(content)


def mustBeIgnored(entry):
    for expr in _IGNORE_PATH:
        if expr.match(entry):
            return True
    return False


def scanDir(base_path):
    this_level_result = []
    log.einfo('Scanning directory ' + base_path + ' for files...')
    for entry in os.listdir(base_path):
        current = base_path + entry
        if mustBeIgnored(entry):
            continue
        if os.path.isdir(entry):
            this_level_result += scanDir(entry)
        elif os.path.isfile(entry):
            try:
                this_level_result.append(getMetaInfo(entry))
            except chewy.NoMetaError:
                continue
    return this_level_result


def main():
    # Get repository base URL
    if len(sys.argv) < 2:
        repo_url = _CHEWY_REPOSITORY_DEFAULT_URL
    else:
        # TODO Validate URL
        repo_url = sys.argv[1]

    log.einfo('Set repo base directory to ' + repo_url)
    # Walk through the current directory down and find all files
    modules = scanDir(os.curdir)
    manifest = open(_MANIFEST_FILENAME, 'wt')
    manifest.write(_X_CHEWY_REPOBASE + repo_url + '\n' + _MANIFEST_HEADER)
    for mod in modules:
        addons_str = ''
        if mod.addons:
            addons_str = ' ' + ' '.join(mod.addons)
        description = urllib.parse.quote_plus(mod.description)
        manifest.write(mod.path + ' ' + mod.version + ' ' + description + addons_str + '\n')


if __name__ == '__main__':
    main()
